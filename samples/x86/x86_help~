
Section '[ Pipeline ]':
/////////////
//////////////
CHANGED
  DecodeWidth = <num_inst> (Default = 4)
  IssueWidth = <num_inst> (Default = 4)
  DispatchWidth = <num_inst> (Default = 4)
  CommitWidth = <num_inst> (Default = 4)

////////////
///////////
LEFT
  FetchKind = {Shared|TimeSlice|SwitchOnEvent} (Default = TimeSlice)
  DispatchKind = {Shared|TimeSlice} (Default = TimeSlice)
  IssueKind = {Shared|TimeSlice} (Default = TimeSlice)
  CommitKind = {Shared|TimeSlice} (Default = Shared)
  OccupancyStats = {t|f} (Default = False)

Section '[ Queues ]':

/////////////
/////////////
CHANGED 

  FetchQueueSize = <bytes> (Default = 64)
  UopQueueSize = <num_uops> (Default = 32)
  RobSize = <num_uops> (Default = 64)
  IqSize = <num_uops> (Default = 40)
  LsqSize = <num_uops> (Default = 20)
  RfIntSize = <entries> (Default = 80)
  RfFpSize = <entries> (Default = 40)
  RfXmmSize = <entries> (Default = 40)
////////////
////////////
LEFT 

  RobKind = {Private|Shared} (Default = Private)
  IqKind = {Private|Shared} (Default = Private)
  LsqKind = {Private|Shared} (Default = 20)
  RfKind = {Private|Shared} (Default = Private)
  

Section '[ TraceCache ]':

//////////// 
////////////
CHANGED 

  Present = {t|f} (Default = False)

////////////
////////////
LEFT 

      If true, a trace cache is included in the model. If false, the rest of the
      options in this section are ignored.
  Sets = <num_sets> (Default = 64)
      Number of sets in the trace cache.
  Assoc = <num_ways> (Default = 4)
      Associativity of the trace cache. The product Sets * Assoc is the total
      number of traces that can be stored in the trace cache.
  TraceSize = <num_uops> (Default = 16)
      Maximum size of a trace of uops.
  BranchMax = <num_branches> (Default = 3)
      Maximum number of branches contained in a trace.
  QueueSize = <num_uops> (Default = 32)
      Size of the trace queue size in uops.

Section '[ FunctionalUnits ]':

  The possible variables in this section follow the format
      <func_unit>.<field> = <value>
  where <func_unit> refers to a functional unit type, and <field> refers to a
  property of it. Possible values for <func_unit> are:

      IntAdd      Integer adder
      IntMult     Integer multiplier
      IntDiv      Integer divider

      EffAddr     Operator for effective address computations
      Logic       Operator for logic operations

      FloatSimple    Simple floating-point operations
      FloatAdd       Floating-point adder
      FloatComp      Floating-point comparator
      FloatMult      Floating-point multiplier
      FloatDiv       Floating-point divider
      FloatComplex   Operator for complex floating-point computations

      XMMIntAdd      XMM integer adder
      XMMIntMult     XMM integer multiplier
      XMMIntDiv      XMM integer Divider

      XMMLogic       XMM logic operations

      XMMFloatAdd       XMM floating-point adder
      XMMFloatComp      XMM floating-point comparator
      XMMFloatMult      XMM floating-point multiplier
      XMMFloatDiv       XMM floating-point divider
      XMMFloatConv      XMM floating-point converter
      XMMFloatComplex   Complex XMM floating-point operations

  Possible values for <field> are:
      Count       Number of functional units of a given kind.
      OpLat       Latency of the operator.
      IssueLat    Latency since an instruction was issued until the functional
                  unit is available for the next use. For pipelined operators,
                  IssueLat is smaller than OpLat.

Section '[ BranchPredictor ]':

  Kind = {Perfect|Taken|NotTaken|Bimodal|TwoLevel|Combined} (Default = TwoLevel)
      Branch predictor type.
  BTB.Sets = <num_sets> (Default = 256)
      Number of sets in the BTB.
  BTB.Assoc = <num_ways) (Default = 4)
      BTB associativity.
  Bimod.Size = <entries> (Default = 1024)
      Number of entries of the bimodal branch predictor.
  Choice.Size = <entries> (Default = 1024)
      Number of entries for the choice predictor.
  RAS.Size = <entries> (Default = 32)
      Number of entries of the return address stack (RAS).
  TwoLevel.L1Size = <entries> (Default = 1)
      For the two-level adaptive predictor, level 1 size.
  TwoLevel.L2Size = <entries> (Default = 1024)
      For the two-level adaptive predictor, level 2 size.
  TwoLevel.HistorySize = <size> (Default = 8)
      For the two-level adaptive predictor, level 2 history size.

